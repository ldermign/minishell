SIGNAUX : 
// ^\ envoie le signal de sortie (SIGQUIT), qui indique classiquement à 
l'application de quitter au plus vite sans rien sauvegarder ; de nombreuses 
applications ne remplacent pas le comportement par défaut, qui consiste à 
arrêter l'application immédiatement¹. Ainsi, lorsque vous appuyez sur 
Ctrl+ 4(ou tout ce qui envoie le caractère ^\) dans catou bc, aucun des deux 
ne remplace le comportement par défaut, l'application est tuée.

// Le terminal lui-même imprime la ^\partie du message : c'est une 
représentation visuelle du caractère que vous avez tapé, et le terminal est 
en mode cuit et avec l'écho activé (les caractères sont affichés par le 
terminal dès que vous les tapez, par opposition à mode sans écho où les 
caractères ne sont envoyés qu'à l'application, qui choisit ou non de les 
afficher). La Quitpartie vient de bash : il remarque que son processus 
enfant est mort à cause d'un signal d'arrêt, et c'est sa façon de vous le 
faire savoir.

// Les shells gèrent tous les signaux courants, de sorte que si vous tapez 
^\ dans un shell, vous ne tuez pas votre session, vous obtenez simplement 
une nouvelle invite, identique à ^C.




PIPE :
https://linuxhint-com.translate.goog/pipe_system_call_c/?_x_tr_sl=en&_x_tr_tl=fr&_x_tr_hl=fr&_x_tr_pto=op,sc


REDIRECTIONS :
https://putaindecode.io/articles/maitriser-les-redirections-shell/
https://www.pierre-giraud.com/shell-bash/redirection-gestion-flux/


EXPORT : 
https://www.tutorialspoint.com/unix_commands/export.htm

Scénario 1 : Il ne peut pas y avoir d'espaces à côté du =signe (égal)
Scénario 2 : l'attribution de la valeur d'un objet ne doit pas contenir d'espaces en plus des guillemets
Scénario 3 : l'attribution de valeurs de liste ne doit pas comporter d'espaces entre les valeurs
https://stackoverflow-com.translate.goog/questions/18042369/bash-export-not-a-valid-identifier?_x_tr_sl=en&_x_tr_tl=fr&_x_tr_hl=fr&_x_tr_pto=sc




int	check_if_variable_already_exist(t_env_ms *minishell, char *str)
char	*get_variable(t_env_ms *minishell, char *str)









TESTS : 

 
' '
aaaaaaaaaaaa
aaaaaaaaaaaaaaaa			  fffffffffff
a a a a a a a a a a a a aa 
$PWD$PWD$PWD$PWD$PWD
$PWD$PWD$PWD$PWDD
$PWD${PWD}
$PWD$PFRE
$""
$ ""
tet t t t ytghuij	"htY"jy yruj$RPYJY   $PWD  $pijk" rt"
fhurifg3rufi """ :l;lll
echo > salut
bonjour < coucou
echo >mdr>hey>>sarace \sal"mdr"
echo <hey1<h'ey2'
echo bonjour >hey >>hey2 >>hey3
>> e
ls $HOME/Desktop
echo “$PATH”
echo "$PATH$PWD"
echo -n a '' b '' c '' d
e"ch"o bonjour
"${GYTR"
"NYR"%"$"HNTEYN"TE$NW$"
echoooo oui
ctrl \ 
ctrl D -> exit nb de fois ou error
ctrl C apres cat
echo $"FERWOP$PWD"   "" oijk
echo $"GTRE"$"GT"
echo -n
echo $?
$?
historique quand y a une erreur parsing



MARCHE PAS :
signaux dans <<   ->	seg fault
exit + sig_error



JE COMPRENDS PAS
====================================================
bash-5.0$ uijok oiuo > oui | echo oijo < oiuj  > oij 
bash: oiuj: No such file or directory
bash: uijok: command not found
====================================================
bash-5.0$ echo oiuo > oui | uio oijo < oiuj  > oij
bash: oiuj: No such file or directory




LEAKS
/*
$ cat
^\Quit (core dumped)
$ cat
$ cat
^C
$ echo iuok
iuok
$ frttg
*/


FREE
1 -> malloc
2 -> avant fill redir et fill arg
3 -> pendant fill arg avant fill redir





SIGNAUX : 
https://openclassrooms.com/forum/sujet/probleme-sur-un-recode-de-minishell-44334
https://git.42l.fr/Fabien/minishell/src/branch/master/src/signal.c
^\  ->   fait ce que ^D doit faire
^D  ->   seg fault??
^D == EOF

ctrl C  >>>>>  ok?
ctrl D  >>>>>  ok mais pas trop
ctrl \  >>>>>  nop je crois

CTRL C
ok - ctrl-C in an empty prompt should show a new line with a new prompt
ok - ctrl-C in a prompt after you wrote some stuff should show a new line with a new prompt
ok - The buffer should be clean too, press "enter" to make sure nothing from the old line is executed.
ok - ctrl-C after running a blocking command like cat without arguments or grep “something“

CTRL D
ok - ctrl-D in an empty prompt should quit minishell --> RELAUNCH!
ok - ctrl-D in a prompt after you wrote some stuff should not do anything
ok - ctrl-D after running a blocking command like cat without arguments or grep “something“

CTRL \
ok - ctrl-\ in an empty prompt should not do anything
ok - ctrl-\ in a prompt after you wrote some stuff should not do anything!
ok - ctrl-\ after running a blocking command like cat without arguments or grep “something“






$$				->>>>> pas possible?






A FAIRE
options echo									>>>>>>	ok?
echo											>>>>>>	ok?
liste a l'endroit							 	>>>>>>	ok?
$?												>>>>>>	ok?
recup redirections interpretees dans char **	>>>>>>	ok?
signal ctrl D									>>>>>>	ok?
signal ctrl \									>>>>>>	ok?
signal ctrl C quand cat							>>>>>>	ok?
leaks parsing									>>>>>>	ok?
norme moi										>>>>>>	ok?
exec here_doc									>>>>>>	ok?
recup dernier '<<'								>>>>>>	ok?
changer list en char **							>>>>>>	ok?
free here_doc									>>>>>>	ok?
redirections									>>>>>>	ok?
sig_error
leaks											>>>>>>	ok?
mettre en commun								>>>>>>	ok?
norme liena






redirections -> machin< truc				>>>>>>>>	cest booooon
leak -> je trouverai jamais je pense		>>>>>>>>	en fait j ai menti j ai trouve 






sig_error == 127 tout le temps
else
	{
		get_good_fd(args, ms->std.name_file, &(ms->std), pipefd);
		if (execve(path, exec_args_only, env) == -1)
		{
			printf("minishell: %s: command not found\n", args[0]);
			printf("tamereeeeeee\n");
			g_sig_error = 127;
			close(pipefd[0]);
			close(pipefd[1]);
			close_all_fd(&(ms->std));
			// exit(0); // je sais pas si ca fait de la merde quelque part mais ca marche
			return ;
		}
		g_sig_error = 0;
		close(pipefd[0]);
		close(pipefd[1]);
		// close_all_fd(&(ms->std));
		// exit(0);
	}
	close_all_fd(&(ms->std));
	// g_sig_error = 0;
	// exit(0); // sig_error marche pas
}





$ echo ui $ jio ${i} $} 4$>oui
$ cat oui
ui $ jio {i} $}
$ echo ui $ jio ${i} $} $>oui
$ cat oui
ui $ jio {i} $}
$ echo $>oui
$ cat oui
$
$ echo 4$>oui
$ cat oui
4$
$ echo oui 4$>oui
$ cat oui
oui 4$
$ exit






A REGLER
cat < Makefile > walter					>>>>>>		voir avec liena
cat << end								>>>>>>		voir avec liena
echo hello > /dev/full					>>>>>>		je comprends pas
cd										>>>>>>		j ai pas compris
cd $HOME								>>>>>>		ca va etre complique
                          >             >>>>>>		cest boooon
|										>>>>>>		cest boooon
'										>>>>>>		cest boooon
echo ${USER }							>>>>>>		cest boooon
">"										>>>>>>		cest boooon
"<" ">"									>>>>>>		cest boooon
echo -n ouiji							>>>>>>		cest boooon
${}										>>>>>>		cest boooon
$}										>>>>>>		cest boooon
echo $>oui								>>>>>>		cest boooon
echo ui $ jio ${i} $} 4$>oui			>>>>>>		cest boooon
echo ui $ jio ${i} $} 4$> oui			>>>>>>		cest boooon
echo oui ${i} oui						>>>>>>		cets boooon
cd .. trop de fois 						>>>>>>		bah en fait ca marche maintenant





===================================================================================================================
===================================================================================================================
===================================================================================================================
===================================================================================================================

LEAKS


===================================================================================================================
===================================================================================================================


$ ls|gtye|echo oui
oui
minishell: gtye: command not found
==1629834== 
==1629834== HEAP SUMMARY:
==1629834==     in use at exit: 204,871 bytes in 231 blocks
==1629834==   total heap usage: 1,429 allocs, 1,198 frees, 274,047 bytes allocated
==1629834== 
==1629834== LEAK SUMMARY:
==1629834==    definitely lost: 0 bytes in 0 blocks
==1629834==    indirectly lost: 0 bytes in 0 blocks
==1629834==      possibly lost: 0 bytes in 0 blocks
==1629834==    still reachable: 0 bytes in 0 blocks
==1629834==         suppressed: 204,871 bytes in 231 blocks
==1629834== 
==1629834== For lists of detected and suppressed errors, rerun with: -s
==1629834== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1629833== 
==1629833== HEAP SUMMARY:
==1629833==     in use at exit: 204,915 bytes in 232 blocks
==1629833==   total heap usage: 1,349 allocs, 1,117 frees, 269,424 bytes allocated
==1629833== 
==1629833== 44 bytes in 1 blocks are still reachable in loss record 13 of 63
==1629833==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==1629833==    by 0x4065C4: there_is_pipe (pipe.c:113)
==1629833==    by 0x401341: command (main.c:32)
==1629833==    by 0x401523: loop (main.c:73)
==1629833==    by 0x401600: main (main.c:96)
==1629833== 
==1629833== LEAK SUMMARY:
==1629833==    definitely lost: 0 bytes in 0 blocks
==1629833==    indirectly lost: 0 bytes in 0 blocks
==1629833==      possibly lost: 0 bytes in 0 blocks
==1629833==    still reachable: 44 bytes in 1 blocks
==1629833==         suppressed: 204,871 bytes in 231 blocks
==1629833== 
==1629833== For lists of detected and suppressed errors, rerun with: -s
==1629833== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


===================================================================================================================
===================================================================================================================


$ gtye|echo oui
oui
minishell: gtye: command not found
==1630846== 
==1630846== HEAP SUMMARY:
==1630846==     in use at exit: 205,107 bytes in 245 blocks
==1630846==   total heap usage: 2,071 allocs, 1,826 frees, 304,215 bytes allocated
==1630846== 
==1630846== LEAK SUMMARY:
==1630846==    definitely lost: 0 bytes in 0 blocks
==1630846==    indirectly lost: 0 bytes in 0 blocks
==1630846==      possibly lost: 0 bytes in 0 blocks
==1630846==    still reachable: 0 bytes in 0 blocks
==1630846==         suppressed: 205,107 bytes in 245 blocks
==1630846== 
==1630846== For lists of detected and suppressed errors, rerun with: -s
==1630846== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1630845== 
==1630845== HEAP SUMMARY:
==1630845==     in use at exit: 205,151 bytes in 246 blocks
==1630845==   total heap usage: 1,991 allocs, 1,745 frees, 299,592 bytes allocated
==1630845== 
==1630845== 44 bytes in 1 blocks are still reachable in loss record 17 of 68
==1630845==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==1630845==    by 0x4065C4: there_is_pipe (pipe.c:113)
==1630845==    by 0x401341: command (main.c:32)
==1630845==    by 0x401523: loop (main.c:73)
==1630845==    by 0x401600: main (main.c:96)
==1630845== 
==1630845== LEAK SUMMARY:
==1630845==    definitely lost: 0 bytes in 0 blocks
==1630845==    indirectly lost: 0 bytes in 0 blocks
==1630845==      possibly lost: 0 bytes in 0 blocks
==1630845==    still reachable: 44 bytes in 1 blocks
==1630845==         suppressed: 205,107 bytes in 245 blocks
==1630845== 
==1630845== For lists of detected and suppressed errors, rerun with: -s
==1630845== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


===================================================================================================================
===================================================================================================================


$ ls|vgre
minishell: vgre: command not found
==1630919== 
==1630919== HEAP SUMMARY:
==1630919==     in use at exit: 205,215 bytes in 252 blocks
==1630919==   total heap usage: 2,492 allocs, 2,240 frees, 324,292 bytes allocated
==1630919== 
==1630919== 44 bytes in 1 blocks are still reachable in loss record 16 of 68
==1630919==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==1630919==    by 0x4065C4: there_is_pipe (pipe.c:113)
==1630919==    by 0x401341: command (main.c:32)
==1630919==    by 0x401523: loop (main.c:73)
==1630919==    by 0x401600: main (main.c:96)
==1630919== 
==1630919== LEAK SUMMARY:
==1630919==    definitely lost: 0 bytes in 0 blocks
==1630919==    indirectly lost: 0 bytes in 0 blocks
==1630919==      possibly lost: 0 bytes in 0 blocks
==1630919==    still reachable: 44 bytes in 1 blocks
==1630919==         suppressed: 205,171 bytes in 251 blocks
==1630919== 
==1630919== For lists of detected and suppressed errors, rerun with: -s
==1630919== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


===================================================================================================================
===================================================================================================================








MARCHE PAS?
===================================================================================================================
===================================================================================================================


$ cd libft
$ pwd
/mnt/nfs/homes/ejahan/Desktop/minish/libft
$ cd ..
$ pwd
/mnt/nfs/homes/ejahan/Desktop/minish
$ cd ..
$ pwd
/mnt/nfs/homes/ejahan/Desktop
$ cd ..
$ pwd
/mnt/nfs/homes/ejahan
$ cd ..
$ pwd
/mnt/nfs/homes
$ cd ..
$ pwd
/mnt/nfs
$ cd ..
$ pwd
/mnt
$ cd ..
$ pwd
/
$ cd ..
$ pwd
/
$ cd ..
$ pwd
/
$ cd 
$ pwd
/mnt/nfs/homes/ejahan
$ cd Desktop/
$ ls
Cub3D  minish  minishell  minishell_corr_1.pdf	Philosopher  test
$ cd minish
$ ls
a.out	 cmds_a_tester.txt  libft     minishell  srcs			 test_fichiers	   var
a_trier  incs		    Makefile  salut.c	 supress_readline_error  valgrind-out.txt
$ cd .
$ pwd
/mnt/nfs/homes/ejahan/Desktop/minish
$ cd ./oij
minishell: cd: ./oij: No such file or directory
$ cd oij
minishell: cd: oij: No such file or directory
$ pwd
/mnt/nfs/homes/ejahan/Desktop/minish
$ pwd oij
/mnt/nfs/homes/ejahan/Desktop/minish
$ pwd oij btgef
/mnt/nfs/homes/ejahan/Desktop/minish
$ pwd oij btgef gvrt gt
/mnt/nfs/homes/ejahan/Desktop/minish
$ pwd oij btgef gvrt gt pwd
/mnt/nfs/homes/ejahan/Desktop/minish
$ pwd ..
/mnt/nfs/homes/ejahan/Desktop/minish
$ pwd .
/mnt/nfs/homes/ejahan/Desktop/minish
$ cd ../../Desktop/
$ pwd
/mnt/nfs/homes/ejahan/Desktop
$ cd ../../../ejahan
minishell: cd: ../../../ejahan: No such file or directory
$ cd ../../../Ejahan
minishell: cd: ../../../Ejahan: No such file or directory
$ cd ..
$ cd ..
$ cd ..
$ pwd
/mnt/nfs
$ ls
aquota.group  aquota.user  homes
$ cd homes/
$ ls




^C
$ 


===================================================================================================================
===================================================================================================================


$ cat | cat | ls
a.out		   incs      minishell	srcs			valgrind-out.txt
a_trier		   libft     oui	supress_readline_error	var
cmds_a_tester.txt  Makefile  salut.c	test_fichiers
oui
^C
$ $ cat 
^C
$ 


===================================================================================================================
===================================================================================================================

